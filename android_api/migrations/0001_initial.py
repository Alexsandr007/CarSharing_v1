# Generated by Django 4.1.6 on 2023-02-05 15:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllActivityMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.CharField(choices=[('IN_VEHICLE', 'In Vehicle'), ('ON_BICYCLE', 'On Bicycle'), ('ON_FOOT', 'On Foot'), ('WALKING', 'Walking'), ('RUNNING', 'Running'), ('STILL', 'Still'), ('TILTING', 'Tilting'), ('UNKNOWN', 'Unknown'), ('None', 'None')], max_length=25)),
                ('confidence', models.IntegerField()),
            ],
            options={
                'verbose_name': 'AllActivityMetric',
                'verbose_name_plural': 'AllActivityMetrics',
            },
        ),
        migrations.CreateModel(
            name='BaseOkoDriveSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('IN_VEHICLE', 'In Vehicle'), ('ON_BICYCLE', 'On Bicycle'), ('ON_FOOT', 'On Foot'), ('WALKING', 'Walking'), ('RUNNING', 'Running'), ('STILL', 'Still'), ('TILTING', 'Tilting'), ('UNKNOWN', 'Unknown'), ('None', 'None')], max_length=25)),
                ('speed_of_first_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для первого интервала')),
                ('speed_of_second_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для второго интервала')),
                ('speed_of_third_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для третьего интервала')),
                ('speed_of_fourth_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для четвёртого интервала')),
            ],
            options={
                'verbose_name': 'Настройка для OkoDrive_status по Activity_type (Базовые типы)',
                'verbose_name_plural': 'Настройки для OkoDrive_status по Activity_type (Базовые типы)',
                'ordering': ['-activity_type'],
            },
        ),
        migrations.CreateModel(
            name='Bearing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('accuracy', models.FloatField()),
            ],
            options={
                'verbose_name': 'Bearing',
                'verbose_name_plural': 'Bearings',
            },
        ),
        migrations.CreateModel(
            name='CurrentUTCTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_utc', models.CharField(max_length=2, verbose_name='Текущее значение UTC')),
                ('is_main', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('activity', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Телеметрия устройства',
                'verbose_name_plural': 'Телеметрия устройств',
            },
        ),
        migrations.CreateModel(
            name='InVehicleOkoDriveSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('IN_VEHICLE', 'In Vehicle'), ('ON_BICYCLE', 'On Bicycle'), ('ON_FOOT', 'On Foot'), ('WALKING', 'Walking'), ('RUNNING', 'Running'), ('STILL', 'Still'), ('TILTING', 'Tilting'), ('UNKNOWN', 'Unknown'), ('None', 'None')], max_length=25)),
                ('speed_of_first_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для первого интервала')),
                ('speed_of_second_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для второго интервала')),
                ('speed_of_third_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для третьего интервала')),
                ('speed_of_fourth_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для четвёртого интервала')),
            ],
            options={
                'verbose_name': 'Настройка для OkoDrive_status по Activity_type (IN_VEHICLE)',
                'verbose_name_plural': 'Настройки для OkoDrive_status по Activity_type (IN_VEHICLE)',
                'ordering': ['-activity_type'],
            },
        ),
        migrations.CreateModel(
            name='OnBicycleOkoDriveSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('IN_VEHICLE', 'In Vehicle'), ('ON_BICYCLE', 'On Bicycle'), ('ON_FOOT', 'On Foot'), ('WALKING', 'Walking'), ('RUNNING', 'Running'), ('STILL', 'Still'), ('TILTING', 'Tilting'), ('UNKNOWN', 'Unknown'), ('None', 'None')], max_length=25)),
                ('speed_of_first_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для первого интервала')),
                ('speed_of_second_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для второго интервала')),
                ('speed_of_third_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для третьего интервала')),
                ('speed_of_fourth_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для четвёртого интервала')),
            ],
            options={
                'verbose_name': 'Настройка для OkoDrive_status по Activity_type (ON_BICYCLE)',
                'verbose_name_plural': 'Настройки для OkoDrive_status по Activity_type (ON_BICYCLE)',
                'ordering': ['-activity_type'],
            },
        ),
        migrations.CreateModel(
            name='OnFootOkoDriveSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('IN_VEHICLE', 'In Vehicle'), ('ON_BICYCLE', 'On Bicycle'), ('ON_FOOT', 'On Foot'), ('WALKING', 'Walking'), ('RUNNING', 'Running'), ('STILL', 'Still'), ('TILTING', 'Tilting'), ('UNKNOWN', 'Unknown'), ('None', 'None')], max_length=25)),
                ('speed_of_first_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для первого интервала')),
                ('speed_of_second_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для второго интервала')),
                ('speed_of_third_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для третьего интервала')),
                ('speed_of_fourth_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для четвёртого интервала')),
            ],
            options={
                'verbose_name': 'Настройка для OkoDrive_status по Activity_type (ON_FOOT)',
                'verbose_name_plural': 'Настройки для OkoDrive_status по Activity_type (ON_FOOT)',
                'ordering': ['-activity_type'],
            },
        ),
        migrations.CreateModel(
            name='RunningOkoDriveSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('IN_VEHICLE', 'In Vehicle'), ('ON_BICYCLE', 'On Bicycle'), ('ON_FOOT', 'On Foot'), ('WALKING', 'Walking'), ('RUNNING', 'Running'), ('STILL', 'Still'), ('TILTING', 'Tilting'), ('UNKNOWN', 'Unknown'), ('None', 'None')], max_length=25)),
                ('speed_of_first_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для первого интервала')),
                ('speed_of_second_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для второго интервала')),
                ('speed_of_third_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для третьего интервала')),
                ('speed_of_fourth_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для четвёртого интервала')),
            ],
            options={
                'verbose_name': 'Настройка для OkoDrive_status по Activity_type (RUNNING)',
                'verbose_name_plural': 'Настройки для OkoDrive_status по Activity_type (RUNNING)',
                'ordering': ['-activity_type'],
            },
        ),
        migrations.CreateModel(
            name='Speed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('accuracy', models.FloatField()),
            ],
            options={
                'verbose_name': 'Speed',
                'verbose_name_plural': 'Speeds',
            },
        ),
        migrations.CreateModel(
            name='SpeedIntervalSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_interval', models.CharField(max_length=12, verbose_name='Первый интервал')),
                ('second_interval', models.CharField(max_length=12, verbose_name='Второй интервал')),
                ('third_interval', models.CharField(max_length=12, verbose_name='Третий интервал')),
                ('fourth_interval', models.CharField(max_length=12, verbose_name='Четвёртый интервал')),
                ('is_main', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Настройка промежутков скоростей для определения OkoDrive_status',
                'verbose_name_plural': 'Настройки промежутков скоростей для определения OkoDrive_status',
                'ordering': ['-is_main'],
            },
        ),
        migrations.CreateModel(
            name='StillOkoDriveSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('IN_VEHICLE', 'In Vehicle'), ('ON_BICYCLE', 'On Bicycle'), ('ON_FOOT', 'On Foot'), ('WALKING', 'Walking'), ('RUNNING', 'Running'), ('STILL', 'Still'), ('TILTING', 'Tilting'), ('UNKNOWN', 'Unknown'), ('None', 'None')], max_length=25)),
                ('speed_of_first_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для первого интервала')),
                ('speed_of_second_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для второго интервала')),
                ('speed_of_third_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для третьего интервала')),
                ('speed_of_fourth_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для четвёртого интервала')),
            ],
            options={
                'verbose_name': 'Настройка для OkoDrive_status по Activity_type (STILL)',
                'verbose_name_plural': 'Настройки для OkoDrive_status по Activity_type (STILL)',
                'ordering': ['-activity_type'],
            },
        ),
        migrations.CreateModel(
            name='TiltingOkoDriveSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('IN_VEHICLE', 'In Vehicle'), ('ON_BICYCLE', 'On Bicycle'), ('ON_FOOT', 'On Foot'), ('WALKING', 'Walking'), ('RUNNING', 'Running'), ('STILL', 'Still'), ('TILTING', 'Tilting'), ('UNKNOWN', 'Unknown'), ('None', 'None')], max_length=25)),
                ('speed_of_first_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для первого интервала')),
                ('speed_of_second_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для второго интервала')),
                ('speed_of_third_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для третьего интервала')),
                ('speed_of_fourth_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для четвёртого интервала')),
            ],
            options={
                'verbose_name': 'Настройка для OkoDrive_status по Activity_type (TILTING)',
                'verbose_name_plural': 'Настройки для OkoDrive_status по Activity_type (TILTING)',
                'ordering': ['-activity_type'],
            },
        ),
        migrations.CreateModel(
            name='TimeStampSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_interval', models.PositiveIntegerField(default=10)),
                ('max_interval', models.PositiveIntegerField(default=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Временная метка',
                'verbose_name_plural': 'Временные метки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UnknownOkoDriveSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('IN_VEHICLE', 'In Vehicle'), ('ON_BICYCLE', 'On Bicycle'), ('ON_FOOT', 'On Foot'), ('WALKING', 'Walking'), ('RUNNING', 'Running'), ('STILL', 'Still'), ('TILTING', 'Tilting'), ('UNKNOWN', 'Unknown'), ('None', 'None')], max_length=25)),
                ('speed_of_first_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для первого интервала')),
                ('speed_of_second_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для второго интервала')),
                ('speed_of_third_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для третьего интервала')),
                ('speed_of_fourth_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для четвёртого интервала')),
            ],
            options={
                'verbose_name': 'Настройка для OkoDrive_status по Activity_type (UNKNOWN)',
                'verbose_name_plural': 'Настройки для OkoDrive_status по Activity_type (UNKNOWN)',
                'ordering': ['-activity_type'],
            },
        ),
        migrations.CreateModel(
            name='WalkingOkoDriveSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('IN_VEHICLE', 'In Vehicle'), ('ON_BICYCLE', 'On Bicycle'), ('ON_FOOT', 'On Foot'), ('WALKING', 'Walking'), ('RUNNING', 'Running'), ('STILL', 'Still'), ('TILTING', 'Tilting'), ('UNKNOWN', 'Unknown'), ('None', 'None')], max_length=25)),
                ('speed_of_first_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для первого интервала')),
                ('speed_of_second_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для второго интервала')),
                ('speed_of_third_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для третьего интервала')),
                ('speed_of_fourth_interval', models.CharField(choices=[('in_car', 'In Car'), ('out_car', 'Out Car'), ('ignore', 'Ignore'), ('error', 'Error')], max_length=12, verbose_name='Статус для четвёртого интервала')),
            ],
            options={
                'verbose_name': 'Настройка для OkoDrive_status по Activity_type (WALKING)',
                'verbose_name_plural': 'Настройки для OkoDrive_status по Activity_type (WALKING)',
                'ordering': ['-activity_type'],
            },
        ),
        migrations.CreateModel(
            name='XY',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('accuracy', models.FloatField()),
            ],
            options={
                'verbose_name': 'Coordinate',
                'verbose_name_plural': 'Coordinates',
            },
        ),
        migrations.AddConstraint(
            model_name='speedintervalsettings',
            constraint=models.UniqueConstraint(condition=models.Q(('is_main', True)), fields=('is_main',), name='unique_is_main'),
        ),
        migrations.AddField(
            model_name='device',
            name='data',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='android_api.data'),
        ),
        migrations.AddField(
            model_name='data',
            name='all_activity_metrics',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='android_api.allactivitymetrics'),
        ),
        migrations.AddField(
            model_name='data',
            name='bearing',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='android_api.bearing'),
        ),
        migrations.AddField(
            model_name='data',
            name='speed',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='android_api.speed'),
        ),
        migrations.AddField(
            model_name='data',
            name='xy',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='android_api.xy'),
        ),
    ]
